#############################################################################
# Pipeline for running phyloacc per locus
#############################################################################

# time -p snakemake -p -s phyloacc.smk --configfile test/phyloacc-job-files/snakemake/phyloacc-config.yaml --profile test/phyloacc-job-files/snakemake/profiles/slurm_profile --dryrun
# real 17772.16
# user 61.83
# sys 21.63

#############################################################################

import os 

#############################################################################

INDIR = config["input_directory"];
OUTDIR = config["output_directory"];
LOCI = config["locus_list"];
# Inputs for the snakemake pipeline are read from the config file generated by
# the interface

#############################################################################
# Final rule - rule that depends on final expected output file and initiates all
# the other rules

localrules: all

rule all:
    input:
        expand(os.path.join(OUTDIR, "{locus}-phyloacc-out", "{locus}_hyper.txt"), locus=LOCI)
# This rule just checks that some of the phyloacc output files are present for each locus

#############################################################################
# Pipeline rules

rule run_phyloacc:
    input:
        os.path.join(INDIR, "{locus}.cfg")
    output:
        os.path.join(OUTDIR, "{locus}-phyloacc-out", "{locus}_hyper.txt")
    log:
        os.path.join(OUTDIR, "{locus}-phyloacc-out", "{locus}-phyloacc.log")
    shell:
        """
        /n/home07/gthomas/projects/PhyloAcc-interface/PhyloAcc/PhyloAcc {input} &> {log}
        """
        # Need to replace this with path to PhyloAcc on current install... depends on how we package the codebases together
        
# This rule runs phyloacc on each locus individually. With a cluster profile
# each locus will be submitted as a job.

#############################################################################